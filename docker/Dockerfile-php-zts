FROM debian:bookworm-slim AS zts-base

COPY docker-php-ext-* /usr/local/bin/
COPY docker-php-entrypoint /usr/local/bin/
COPY docker-php-source /usr/local/bin/
COPY apache2-foreground /usr/local/bin/

RUN chmod +x /usr/local/bin/apache2-foreground
RUN chmod +x /usr/local/bin/docker-php-source
RUN chmod +x /usr/local/bin/docker-php-ext-*
RUN chmod +x /usr/local/bin/docker-php-entrypoint

ENV PATH="/usr/local/bin:${PATH}"
ENV PHP_INI_DIR /usr/local/etc/php
ENV PHPIZE_DEPS \
  autoconf \
  dpkg-dev \
  file \
  g++ \
  gcc \
  libc-dev \
  make \
  pkg-config \
  re2c

ENV APACHE_CONFDIR /etc/apache2
ENV APACHE_ENVVARS $APACHE_CONFDIR/envvars
ENV PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O3 -march=native -funroll-loops -fomit-frame-pointer -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
ENV PHP_CPPFLAGS="$PHP_CFLAGS"
ENV PHP_LDFLAGS="-Wl,-O2 -pie"
ENV GPG_KEYS 1198C0117593497A5EC5C199286AF1F9897469DC C28D937575603EB4ABB725861C0779DC5C0A9DE4 AFD8691FDAEDF03BDF6E460563F15A9B715376CA
ENV PHP_VERSION 8.3.3
ENV PHP_URL="https://www.php.net/distributions/php-8.3.3.tar.xz" PHP_ASC_URL="https://www.php.net/distributions/php-8.3.3.tar.xz.asc"
ENV PHP_SHA256="b0a996276fe21fe9ca8f993314c8bc02750f464c7b0343f056fb0894a8dfa9d1"

RUN set -eux; mkdir -p "$PHP_INI_DIR/conf.d"
RUN set -eux; mkdir -p /var/www/html
RUN set -eux; chown www-data:www-data /var/www/html
RUN set -eux; chmod 1777 /var/www/html

RUN set -eux; \
 { \
  echo 'Package: php*'; \
  echo 'Pin: release *'; \
  echo 'Pin-Priority: -1'; \
 } > /etc/apt/preferences.d/no-debian-php

RUN mount=type=cache, target=/var/cache/apt \
    set -eux; \
    apt-get update; \
    apt-get install -qy --no-install-recommends \
    $PHPIZE_DEPS \
    ca-certificates \
    curl \
    xz-utils \
    apache2-dev \
    libargon2-dev \
    libcurl4-openssl-dev \
    libonig-dev \
    libreadline-dev \
    libsodium-dev \
    libsqlite3-dev \
    libssl-dev \
    libxml2-dev \
    zlib1g-dev \
    libzip-dev \
    wget \
    git \
    unzip \
    libsodium-dev \
    apache2 \
    gpg \
    gpg-agent \
    $PHPIZE_DEPS \
    dirmngr \
    ca-certificates \
    curl \
    xz-utils \
 ;

RUN set -eux; \
     sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"; \
     . "$APACHE_ENVVARS"; \
     for dir in \
      "$APACHE_LOCK_DIR" \
      "$APACHE_RUN_DIR" \
      "$APACHE_LOG_DIR" \
      "$APACHE_RUN_DIR/socks" \
     ; do \
      rm -rvf "$dir"; \
      mkdir -p "$dir"; \
      chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"; \
      chmod 1777 "$dir"; \
     done; \
     rm -rvf /var/www/html/*; \
     ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"; \
     ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"; \
     ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"; \
     chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

RUN a2dismod mpm_event && a2enmod mpm_prefork

RUN { \
  echo '<FilesMatch \.php$>'; \
  echo '\tSetHandler application/x-httpd-php'; \
  echo '</FilesMatch>'; \
  echo; \
  echo 'DirectoryIndex disabled'; \
  echo 'DirectoryIndex index.php index.html'; \
  echo; \
  echo '<Directory /var/www/>'; \
  echo '\tOptions -Indexes'; \
  echo '\tAllowOverride All'; \
  echo '</Directory>'; \
 } | tee "$APACHE_CONFDIR/conf-available/docker-php.conf" \
 && a2enconf docker-php

RUN set -eux; \
 mkdir -p /usr/src; \
 cd /usr/src; \
 curl -fsSL -o php.tar.xz "$PHP_URL"; \
 if [ -n "$PHP_SHA256" ]; then \
  echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -; \
 fi; \
 if [ -n "$PHP_ASC_URL" ]; then \
  curl -fsSL -o php.tar.xz.asc "$PHP_ASC_URL"; \
  export GNUPGHOME="$(mktemp -d)"; \
  for key in $GPG_KEYS; do \
   gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
  done; \
  gpg --batch --verify php.tar.xz.asc php.tar.xz; \
  gpgconf --kill all; \
  rm -rf "$GNUPGHOME"; \
 fi; \

RUN set -eux; \
 export \
  CFLAGS="$PHP_CFLAGS" \
  CPPFLAGS="$PHP_CPPFLAGS" \
  LDFLAGS="$PHP_LDFLAGS" \
  PHP_BUILD_PROVIDER='https://github.com/docker-library/php' \
  PHP_UNAME='Linux - Docker' \
 ; \
    chmod +x /usr/local/bin/docker-php-source; \
 docker-php-source extract; \
 cd /usr/src/php; \
 gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"; \
 debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"; \
 if [ ! -d /usr/include/curl ]; then \
  ln -sT "/usr/include/$debMultiarch/curl" /usr/local/include/curl; \
 fi; \
 ./configure \
  --build="$gnuArch" \
  --with-config-file-path="$PHP_INI_DIR" \
  --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
  --enable-option-checking=fatal \
  --with-mhash \
  --with-pic \
  --enable-mbstring \
  --enable-mysqlnd \
  --with-password-argon2 \
  --with-sodium=shared \
  --with-pdo-sqlite=/usr \
  --with-sqlite3=/usr \
  --with-curl \
  --with-iconv \
  --with-openssl \
  --with-readline \
  --with-zlib \
  --disable-phpdbg \
  --with-pear \
  $(test "$gnuArch" = 's390x-linux-gnu' && echo '--without-pcre-jit') \
  --with-libdir="lib/$debMultiarch" \
  --disable-cgi \
  --enable-zts \
  --with-apxs2 \
 ; \
 make -j "$(nproc)"; \
 find -type f -name '*.a' -delete; \
 make install; \
 find \
  /usr/local \
  -type f \
  -perm '/0111' \
  -exec sh -euxc ' \
   strip --strip-all "$@" || : \
  ' -- '{}' + \
 ; \
 make clean; \
 cp -v php.ini-* "$PHP_INI_DIR/"; \
 cd /; \
 docker-php-source delete; \
 rm -rf /var/lib/apt/lists/*; \
 pecl update-channels; \
 rm -rf /tmp/pear ~/.pearrc; \
 php --version

RUN docker-php-ext-enable sodium

ENTRYPOINT ["docker-php-entrypoint"]

FROM zts-base AS zts
ENV PATH="/var/www/html/vendor/bin:${PATH}"

WORKDIR /var/www/html

EXPOSE 80

WORKDIR /var/www/html

RUN --mount=type=cache,target='/usr/src/php' --mount=type=cache,target='/usr/local/lib/php' \
    pecl install xdebug parallel && \
    pecl enable xdebug parallel

RUN --mount=type=cache,target='/usr/src/php' --mount=type=cache,target='/usr/local/lib/php' \
    docker-php-ext-install zip pdo pdo_mysql mysqli sodium  && \
    docker-php-ext-enable zip sodium pdo pdo_mysql mysqli \

RUN --mount=type=cache,target='/usr/local/bin' \
    curl -sS https://getcomposer.org/installer | \
    php -- --install-dir=/usr/local/bin --filename=composer && \
    ln -s /root/.composer/vendor/bin/leaf /usr/local/bin/leaf

RUN apt-get purge -y g++ \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \

WORKDIR /var/www
RUN chown -R www-data:www-data /var/www && chmod -R 755 /var/www
COPY 000-default.conf /etc/apache2/sites-available/000-default.conf
RUN a2enmod rewrite

WORKDIR /var/www/html/

RUN groupadd -g 1000 leaf
RUN useradd -m -u 1000 -g 1000 leaf
RUN chown -R leaf:leaf /var/www/html

RUN echo "xdebug.mode=debug" >> /usr/local/etc/php/conf.d/xdebug.ini
RUN echo "xdebug.start_with_request=yes" >> /usr/local/etc/php/conf.d/xdebug.ini
RUN echo "xdebug.client_host=host.docker.internal" >> /usr/local/etc/php/conf.d/xdebug.ini
RUN echo "extension=parallel.so" > /usr/local/etc/php/conf.d/parallel.ini
RUN echo "zlib.output_compression = On" >> /usr/local/etc/php/conf.d/docker-php-ext-zlib.ini
RUN echo "zlib.output_compression_level = 9" >> /usr/local/etc/php/conf.d/docker-php-ext-zlib.ini

USER leaf
RUN composer require leafs/cli leafs/devtools